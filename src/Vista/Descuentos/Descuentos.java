package Vista.Descuentos;

import Datos.DatosDescuentos;
import Datos.DatosDetalleDescuentos;
import Funciones.FuncionesDescuentos;
import Vista.Notificaciones.Aceptar_Cancelar;
import Vista.Notificaciones.Advertencia;
import Vista.Notificaciones.Fallo;
import Vista.Notificaciones.Realizado;
import java.awt.Frame;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author SwichBlade15
 */
public final class Descuentos extends javax.swing.JInternalFrame {

    FuncionesDescuentos funcion = new FuncionesDescuentos();
    DatosDescuentos datos = new DatosDescuentos();
    DatosDetalleDescuentos datosdetalle = new DatosDetalleDescuentos();
    Date date = null, date2 = null;
    java.sql.Date sql;
    String fk_clientes, fk_categorias, fk_productos;
    DefaultTableModel modelo, modelo2;

    public Descuentos() {
        initComponents();
        rbtnActivo.doClick();
        mostrar("");
    }

    public void mostrar(String buscar) {
        try {
            modelo = funcion.mostrar(buscar);
            tblDescuentos.setModel(modelo);
            ocultar_columnas();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    //Obtiene los datos de los detalles de la funcion MostrarDetalles
    public void mostrarDetalles(int buscar) {
        try {
            modelo2 = funcion.mostrarDetalle(buscar);
            ocultar_columnas();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void revisarDetalles() {
        //Revisa la columna de productos, categorias y clientes para ver si alguno tiene datos dentro
        //Si alguno tiene datos, significa que los otros 2 no tienen ningun dato
        txtIddetalledescuentos.setText(String.valueOf(modelo2.getValueAt(0, 0)));

        if (!String.valueOf(modelo2.getValueAt(0, 1)).equals("null")) {  //Verifica si la columna productos es nula
            txtTipo.setText("Productos");
            txtAplicar.setText(String.valueOf(modelo2.getValueAt(0, 1)));
            txtCodigo.setText(String.valueOf(modelo2.getValueAt(0, 2)));
        } else if (!String.valueOf(modelo2.getValueAt(0, 4)).equals("null")) {  //Verifica si la columna categorias es nula
            txtTipo.setText("Categorias");
            txtAplicar.setText(String.valueOf(modelo2.getValueAt(0, 4)));
            txtCodigo.setText(String.valueOf(modelo2.getValueAt(0, 5)));
        } else if (!String.valueOf(modelo2.getValueAt(0, 6)).equals("null")) {  //Verifica si la columna clientes es nula
            txtTipo.setText("Clientes");
            txtAplicar.setText(String.valueOf(modelo2.getValueAt(0, 6)));
            txtCodigo.setText(String.valueOf(modelo2.getValueAt(0, 7)));
        }
    }

    public void ocultar_columnas() {
        tblDescuentos.getColumnModel().getColumn(0).setMaxWidth(0);
        tblDescuentos.getColumnModel().getColumn(0).setMinWidth(0);
        tblDescuentos.getColumnModel().getColumn(0).setPreferredWidth(0);
    }

    private void inhabilitar() {
        txtNombre.setEditable(false);
        txtDescuentos.setEditable(false);
        dchFechainicio.setEnabled(false);
        dchFechacierre.setEnabled(false);
        atxtDescripcion.setEditable(false);
        rbtnActivo.setEnabled(false);
        rbtnInactivo.setEnabled(false);
        txtCantidad.setEditable(false);
    }

    private void limpiarTextFields() {
        txtCodigo.setText("");
        txtAplicar.setText("");
        txtTipo.setText("");
        txtNombre.setText("");
        txtDescuentos.setText("");
        dchFechainicio.setCalendar(null);
        dchFechacierre.setCalendar(null);
        atxtDescripcion.setText("");
        txtCantidad.setText("");

    }

    private void habilitar() {
        txtNombre.setEditable(true);
        txtDescuentos.setEditable(true);
        dchFechainicio.setEnabled(true);
        dchFechacierre.setEnabled(true);
        atxtDescripcion.setEditable(true);
        rbtnActivo.setEnabled(true);
        rbtnInactivo.setEnabled(true);
        txtCantidad.setEditable(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rbtngDescuentos = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        txtDescuentos = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        atxtDescripcion = new javax.swing.JTextArea();
        dchFechainicio = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        dchFechacierre = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDescuentos = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        txtCodigo = new javax.swing.JTextField();
        txtAplicar = new javax.swing.JTextField();
        btnSeleccionar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        rbtnActivo = new javax.swing.JRadioButton();
        rbtnInactivo = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        txtTipo = new javax.swing.JTextField();
        txtIddescuentos = new javax.swing.JTextField();
        btnNuevo = new javax.swing.JButton();
        txtIddetalledescuentos = new javax.swing.JTextField();

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Descuento:");

        txtDescuentos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Descripcion:");

        atxtDescripcion.setColumns(20);
        atxtDescripcion.setRows(5);
        jScrollPane1.setViewportView(atxtDescripcion);

        dchFechainicio.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("F. Inicio:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("F. Cierre:");

        dchFechacierre.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Aplicar a:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("%");

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        tblDescuentos = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;
            }
        };
        tblDescuentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblDescuentos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDescuentosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblDescuentos);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Nombre:");

        txtNombre.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Cantidad:");

        txtCantidad.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        txtCodigo.setEditable(false);
        txtCodigo.setBackground(new java.awt.Color(255, 255, 255));

        txtAplicar.setEditable(false);
        txtAplicar.setBackground(new java.awt.Color(255, 255, 255));

        btnSeleccionar.setText("Seleccionar");
        btnSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Estado:");

        rbtngDescuentos.add(rbtnActivo);
        rbtnActivo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rbtnActivo.setText("Activo");

        rbtngDescuentos.add(rbtnInactivo);
        rbtnInactivo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rbtnInactivo.setText("Inactivo");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("Tipo:");

        txtTipo.setEditable(false);
        txtTipo.setBackground(new java.awt.Color(255, 255, 255));
        txtTipo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        btnNuevo.setText("Nuevo");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel10)
                            .addComponent(jLabel7)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(dchFechainicio, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(txtDescuentos)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel6))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(btnGuardar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnNuevo))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel8))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(rbtnInactivo)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(rbtnActivo)
                                            .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dchFechacierre, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(59, 59, 59)
                                                .addComponent(txtIddescuentos))
                                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtAplicar, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(btnSeleccionar))
                                            .addComponent(txtIddetalledescuentos, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 344, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIddescuentos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIddetalledescuentos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbtnInactivo)
                            .addComponent(jLabel9))
                        .addGap(4, 4, 4)
                        .addComponent(rbtnActivo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnGuardar)
                            .addComponent(btnNuevo)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAplicar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSeleccionar)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtDescuentos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(dchFechainicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(dchFechacierre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarActionPerformed
        SeleccionarDescuentos dialog = new SeleccionarDescuentos(f, true);
        dialog.setVisible(true);
    }//GEN-LAST:event_btnSeleccionarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (txtIddescuentos.getText().length() == 0) {
            guardar();
        } else {
            editar();
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        if (evt.getClickCount() == 2) {
            inhabilitar();
        }
    }//GEN-LAST:event_formMouseClicked

    private void tblDescuentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDescuentosMouseClicked
        int seleccionar = tblDescuentos.rowAtPoint(evt.getPoint());

        txtIddescuentos.setText(String.valueOf(tblDescuentos.getValueAt(seleccionar, 0)));
        txtNombre.setText(String.valueOf(tblDescuentos.getValueAt(seleccionar, 1)));
        txtDescuentos.setText(String.valueOf(tblDescuentos.getValueAt(seleccionar, 2)));
        atxtDescripcion.setText(String.valueOf(tblDescuentos.getValueAt(seleccionar, 3)));

//********************************Fechas********************************
        //Fecha inicio. 
        //Convertir java.sql.date a java.util.date y mostrar en pantalla la fecha de inicio
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        try {
            String fechaInicio = String.valueOf(tblDescuentos.getValueAt(seleccionar, 4));
            date = formato.parse(fechaInicio);
        } catch (ParseException e) {

        }

        //Aplica formato requerido.
        try {
            formato.applyPattern("dd/MM/yyyy");
            String nuevoFormato = formato.format(date);
            Date fecha = formato.parse(nuevoFormato);
            dchFechainicio.setDate(fecha);
        } catch (ParseException ex) {
            Logger.getLogger(Descuentos.class.getName()).log(Level.SEVERE, null, ex);
        }
        //Fin Fecha Inicio

        //Fecha cierre. 
        //Convertir java.sql.date a java.util.date y mostrar en pantalla la fecha de inicio
        SimpleDateFormat formato2 = new SimpleDateFormat("yyyy-MM-dd");
        try {
            String fechacierre = String.valueOf(tblDescuentos.getValueAt(seleccionar, 5));
            date2 = formato2.parse(fechacierre);
        } catch (ParseException e) {

        }

        //Aplica formato requerido.
        try {
            formato2.applyPattern("dd/MM/yyyy");
            String nuevoFormato2 = formato2.format(date2);
            Date fecha2 = formato2.parse(nuevoFormato2);
            dchFechacierre.setDate(fecha2);
        } catch (ParseException ex) {
            Logger.getLogger(Descuentos.class.getName()).log(Level.SEVERE, null, ex);
        }
        //Fin Fecha Cierre
//********************************Fechas********************************

        txtCantidad.setText(String.valueOf(tblDescuentos.getValueAt(seleccionar, 6)));

        //Se hace click en el estado
        if (String.valueOf(tblDescuentos.getValueAt(seleccionar, 7)).equals("Activo")) {
            rbtnActivo.doClick();
        } else if (String.valueOf(tblDescuentos.getValueAt(seleccionar, 7)).equals("Inactivo")) {
            rbtnInactivo.doClick();
        }

        habilitar();
        mostrarDetalles(Integer.parseInt(txtIddescuentos.getText()));
        revisarDetalles();
    }//GEN-LAST:event_tblDescuentosMouseClicked

    public void validarCampos() {

    }

    //Metodos para llamar a los JDialog de Advertencia, Fallo y Realizado
    Frame f = JOptionPane.getFrameForComponent(this);
    String mensaje;
    String encabezado;
    Icon icono;

    public void advertencia() {
        Advertencia dialog = new Advertencia(f, true);
        Advertencia.lblEncabezado.setText(mensaje);
        dialog.setVisible(true);
    }

    public void fallo() {
        Fallo dialog = new Fallo(f, true);
        Fallo.lblEncabezado.setText(mensaje);
        dialog.setVisible(true);
    }

    public void realizado() {
        Realizado dialog = new Realizado(f, true);
        Realizado.lblEncabezado.setText(mensaje);
        dialog.setVisible(true);
    }

    public void aceptarCancelar() {
        Aceptar_Cancelar dialog = new Aceptar_Cancelar(f, true);
        icono = new ImageIcon(getClass().getResource("/Imagenes/FondoCerrarSesion.png"));
        Aceptar_Cancelar.lblFondo.setIcon(icono);
        Aceptar_Cancelar.lblEncabezado.setText(encabezado);
        Aceptar_Cancelar.lblMensaje.setText(mensaje);
        dialog.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea atxtDescripcion;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnSeleccionar;
    private com.toedter.calendar.JDateChooser dchFechacierre;
    private com.toedter.calendar.JDateChooser dchFechainicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton rbtnActivo;
    private javax.swing.JRadioButton rbtnInactivo;
    private javax.swing.ButtonGroup rbtngDescuentos;
    public static javax.swing.JTable tblDescuentos;
    public static javax.swing.JTextField txtAplicar;
    private javax.swing.JTextField txtCantidad;
    public static javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtDescuentos;
    private javax.swing.JTextField txtIddescuentos;
    public static javax.swing.JTextField txtIddetalledescuentos;
    private javax.swing.JTextField txtNombre;
    public static javax.swing.JTextField txtTipo;
    // End of variables declaration//GEN-END:variables

    public void guardar() {
        validarCampos();

        //Convertir Fecha Inicio de java.util.date a java.sql.date
        try {
            date = dchFechainicio.getDate();
            SimpleDateFormat plantilla = new SimpleDateFormat("dd/MM/yyyy");
            String tiempo = plantilla.format(date);

            SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
            Date parsed = format.parse(tiempo);
            sql = new java.sql.Date(parsed.getTime());
        } catch (ParseException ex) {
            Logger.getLogger(Descuentos.class.getName()).log(Level.SEVERE, null, ex);
        }

        datos.setFechainicio(sql);

        //Convertir Fecha Cierre de java.util.date a java.sql.date
        try {
            date = dchFechacierre.getDate();
            SimpleDateFormat plantilla = new SimpleDateFormat("dd/MM/yyyy");
            String tiempo = plantilla.format(date);

            SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
            Date parsed = format.parse(tiempo);
            sql = new java.sql.Date(parsed.getTime());
        } catch (ParseException ex) {
            Logger.getLogger(Descuentos.class.getName()).log(Level.SEVERE, null, ex);
        }

        datos.setNombredescuentos(txtNombre.getText());
        datos.setDescuentos(Integer.parseInt(txtDescuentos.getText()));
        datos.setDescripcion(atxtDescripcion.getText());
        datos.setFechacierre(sql);
        datos.setCantidad(Integer.parseInt(txtCantidad.getText()));

        //Ingreso del estado del descuento
        if (rbtnActivo.isSelected()) {
            datos.setEstado("Activo");
        } else if (rbtnInactivo.isSelected()) {
            datos.setEstado("Inactivo");
        }

        if (funcion.insertar(datos)) {
            switch (txtTipo.getText()) {
                case "Clientes":
                    fk_clientes = txtCodigo.getText();
                    if (funcion.insertarDetalleConClientes(funcion.buscarDescuento(txtNombre.getText()), funcion.buscarClientes(fk_clientes))) {
                        mensaje = "Descuento guardado correctamente";
                        realizado();
                        mostrar("");
                        inhabilitar();
                        limpiarTextFields();
                    } else {
                        mensaje = "Descuento no guardado";
                        fallo();
                        mostrar("");
                    }
                    break;
                case "Categorias":
                    fk_categorias = txtCodigo.getText();
                    if (funcion.insertarDetalleConCategorias(funcion.buscarDescuento(txtNombre.getText()), funcion.buscarCategorias(txtAplicar.getText()))) {
                        mensaje = "Descuento guardado correctamente";
                        realizado();
                        mostrar("");
                        inhabilitar();
                        limpiarTextFields();
                    } else {
                        mensaje = "Descuento no guardado";
                        fallo();
                        mostrar("");
                    }
                    break;
                case "Productos":
                    fk_productos = txtCodigo.getText();
                    if (funcion.insertarDetalleConProductos(funcion.buscarProductos(fk_productos), funcion.buscarDescuento(txtNombre.getText()))) {
                        mensaje = "Descuento guardado correctamente";
                        realizado();
                        mostrar("");
                        inhabilitar();
                        limpiarTextFields();
                    } else {
                        mensaje = "Descuento no guardado";
                        fallo();
                        mostrar("");
                    }
                    break;
                default:
                    break;
            }
        } else {
            mensaje = "Descuento no guardado";
            fallo();
            mostrar("");
        }
    }

    public void editar() {
        validarCampos();

        datos.setIddescuentos(Integer.parseInt(txtIddescuentos.getText()));

        //Convertir Fecha Inicio de java.util.date a java.sql.date
        try {
            date = dchFechainicio.getDate();
            SimpleDateFormat plantilla = new SimpleDateFormat("dd/MM/yyyy");
            String tiempo = plantilla.format(date);

            SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
            Date parsed = format.parse(tiempo);
            sql = new java.sql.Date(parsed.getTime());
        } catch (ParseException ex) {
            Logger.getLogger(Descuentos.class.getName()).log(Level.SEVERE, null, ex);
        }

        datos.setFechainicio(sql);

        //Convertir Fecha Cierre de java.util.date a java.sql.date
        try {
            date = dchFechacierre.getDate();
            SimpleDateFormat plantilla = new SimpleDateFormat("dd/MM/yyyy");
            String tiempo = plantilla.format(date);

            SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
            Date parsed = format.parse(tiempo);
            sql = new java.sql.Date(parsed.getTime());
        } catch (ParseException ex) {
            Logger.getLogger(Descuentos.class.getName()).log(Level.SEVERE, null, ex);
        }

        datos.setNombredescuentos(txtNombre.getText());
        datos.setDescuentos(Integer.parseInt(txtDescuentos.getText()));
        datos.setFechacierre(sql);
        datos.setCantidad(Integer.parseInt(txtCantidad.getText()));
        datos.setDescripcion(atxtDescripcion.getText());

        //Ingreso del estado del descuento
        if (rbtnActivo.isSelected()) {
            datos.setEstado("Activo");
        } else if (rbtnInactivo.isSelected()) {
            datos.setEstado("Inactivo");
        }

        datosdetalle.setIddetalledescuentos(Integer.parseInt(txtIddetalledescuentos.getText()));

        if (funcion.editar(datos)) {
            switch (txtTipo.getText()) {
                case "Clientes":
                    fk_clientes = txtCodigo.getText();
                    if (funcion.editarDetalleConClientes(datosdetalle,txtNombre.getText(), fk_clientes)) {
                        mensaje = "Descuento editado correctamente";
                        realizado();
                        mostrar("");
                        inhabilitar();
                        limpiarTextFields();
                    } else {
                        mensaje = "Descuento no editado";
                        fallo();
                        mostrar("");
                    }
                    break;
                case "Categorias":
                    fk_categorias = txtCodigo.getText();
                    if (funcion.editarDetalleConCategorias(datosdetalle, Integer.parseInt(txtIddescuentos.getText()), Integer.parseInt(txtCodigo.getText()))) {
                        mensaje = "Descuento editado correctamente";
                        realizado();
                        mostrar("");
                        inhabilitar();
                        limpiarTextFields();
                    } else {
                        mensaje = "Descuento no editado";
                        fallo();
                        mostrar("");
                    }
                    break;
                case "Productos":
                    fk_productos = txtCodigo.getText();
                    if (funcion.editarDetalleConProductos(datosdetalle, txtNombre.getText(), fk_productos)) {
                        mensaje = "Descuento editado correctamente";
                        realizado();
                        mostrar("");
                        inhabilitar();
                        limpiarTextFields();
                    } else {
                        mensaje = "Descuento no editado";
                        fallo();
                        mostrar("");
                    }
                    break;
                default:
                    break;
            }
        } else {
            mensaje = "Descuento no guardado";
            fallo();
            mostrar("");
        }
    }
}
